        try {
          {{{dataType}}}? _obj =
          {{#isArray}}{{#items}}
          {{#isPrimitiveType}} (value as Iterable).cast<{{{dataType}}}>().toList();{{/isPrimitiveType}}
          {{#isModel}}{{{dataType}}}.listFromJson(value);{{/isModel}}
          {{/items}}{{/isArray}}

          {{^isArray}}
          {{#isPrimitiveType}}
          value as {{{dataType}}}?;
          {{/isPrimitiveType}}
          {{^isPrimitiveType}}{{#isModel}} {{dataType}}.fromJson(value); {{/isModel}}{{/isPrimitiveType}}
          {{/isArray}}
          if(_obj != null) {
            _new{{classname}} = {{classname}}(_obj);
            return _new{{classname}};
          }
        } on Exception catch(_) {
        } on TypeError catch (_) {
        } on AssertionError catch (_) {
            /* ignore assertion errors when deserializing 'anyOf' types */
        }
